stages:
  - base
  - test
  - build
  - deploy

#image: docker:latest
#services:
#  - docker:dind

variables:
  #  DOCKER_DRIVER: overlay
  #  SPRING_PROFILES_ACTIVE: gitlab-ci
  #  CI_REGISTRY_USER: faxrij
  #  CI_REGISTRY_PASSWORD: Satstudent1#
  APP_NAME: spring-boot-gitlab
  REPO: todo_app_backend
  CI_IMAGE_TAG: ${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
  CI_BASE_IMAGE: ${CI_REGISTRY_IMAGE}/base:latest
  CI_REGISTRY: registry.gitlab.com/faxrij/$REPO

#stages:
#  - build
#  - docker

Test:
  image: $CI_REGISTRY
  stage: test
  services:
    - docker:18.09-dind
  variables:
    SPRING_PROFILES_ACTIVE: local
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ''
    DOCKER_DRIVER: overlay2
  script:
    - mvn verify
  artifacts:
    when: on_failure
    paths:
      - target/surefire-reports

Build:
  image: docker:18.09
  stage: build
  services:
    - docker:18.09-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: '/certs'
    DOCKER_DRIVER: overlay2
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build
      --network host
      --tag $CI_REGISTRY_IMAGE:$CI_IMAGE_TAG
      .
    - docker tag $CI_REGISTRY_IMAGE:$CI_IMAGE_TAG $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_IMAGE_TAG

cache:
  paths:
    - .m2/repository/

#maven-build:
#  image: maven:3.8.3-openjdk-17
#  stage: build
#  script: "mvn package -B"
#  artifacts:
#    paths:
#      - target/*.jar


#docker-build:
#  stage: docker
#  script:
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
#    - docker build -t $CI_REGISTRY .
#    - docker push $CI_REGISTRY


